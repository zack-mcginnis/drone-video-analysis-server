worker_processes auto;
rtmp_auto_push on;

# Redirect error log to stderr for Docker logging
error_log /dev/stderr info;

events {
    worker_connections 1024;
}

rtmp {
    server {
        listen 1935;
        chunk_size 4096;

        application live {
            live on;
            
            # Enable recording directly to MP4 instead of FLV
            record all;
            record_path /recordings;
            record_unique on;
            record_suffix -%Y-%m-%d-%H-%M-%S.mp4;
            
            # Execute a script when recording is done
            exec_record_done /usr/local/bin/nginx_exec_wrapper.sh $path $name $basename;
            
            # Generate HLS during live streaming
            hls on;
            hls_path /tmp/hls;
            hls_fragment 2s;
            hls_playlist_length 1800s;
            
            # Save HLS segments and playlist for later use
            hls_cleanup off;
            
            # Create variants for adaptive streaming
            hls_variant _low BANDWIDTH=500000;
            hls_variant _mid BANDWIDTH=1000000;
            hls_variant _high BANDWIDTH=2000000;
        }
    }
}

http {
    sendfile off;
    tcp_nopush on;
    directio 512;
    default_type application/octet-stream;
    
    # Redirect access log to stdout for Docker logging
    access_log /dev/stdout;
    
    # Add some basic security headers
    server_tokens off;
    
    # Increase timeouts for better stability
    keepalive_timeout 65;
    client_body_timeout 12;
    client_header_timeout 12;
    
    # Map to handle CORS for multiple origins
    # NOTE: add your custom origin here
    map $http_origin $cors_origin {
        default "";
        "http://localhost:3000" $http_origin;
        "https://master.d30ze8pk52gyx8.amplifyapp.com" $http_origin;
        "https://dronehub.stream" $http_origin;
        "https://www.dronehub.stream" $http_origin;
    }
    
    # HTTP server for port 80
    server {
        listen 80;
        
        # This URL provides RTMP statistics in XML
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
            # Restrict access to stats
            allow 127.0.0.1;
            # Uncomment when in production
            # deny all;
        }

        location /stat.xsl {
            root /usr/local/nginx/html;
        }
        
        # HLS
        location /hls/drone_stream.m3u8 {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            
            alias /tmp/hls/drone_stream.m3u8;
        
            # Handle OPTIONS method for CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin $cors_origin always;
                add_header Access-Control-Allow-Methods 'GET, OPTIONS' always;
                add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Content-Type, Accept, Range' always;
                add_header Access-Control-Max-Age 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # Always add CORS headers regardless of origin
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods 'GET, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Content-Type, Accept, Range' always;
            add_header Access-Control-Expose-Headers 'Content-Length, Content-Range' always;
            
            # Disable cache for HLS fragments
            add_header Cache-Control no-cache;
        }
        
        # Also handle .ts files for HLS segments
        location ~ ^/hls/(.+\.ts)$ {
            alias /tmp/hls/$1;
            
            # Add CORS headers for .ts files
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods 'GET, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Content-Type, Accept, Range' always;
            add_header Access-Control-Expose-Headers 'Content-Length, Content-Range' always;
            
            # Disable cache for HLS fragments
            add_header Cache-Control no-cache;
        }
        
        # Serve recorded videos
        location /recordings {
            alias /recordings;
            autoindex on;
            
            # Add CORS headers
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods 'GET, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Content-Type, Accept, Range' always;
        }
        
        # Root path
        location / {
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Range" always;
            add_header Cache-Control no-cache;
        }
    }
    
    # Also keep the original HTTP server on port 8080 for backward compatibility
    server {
        listen 8080;
        
        # This URL provides RTMP statistics in XML
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }

        location /stat.xsl {
            root /usr/local/nginx/html;
        }
        
        # HLS
        location /hls/drone_stream.m3u8 {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            
            alias /tmp/hls/drone_stream.m3u8;
        
            # Handle OPTIONS method for CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin $cors_origin always;
                add_header Access-Control-Allow-Methods 'GET, OPTIONS' always;
                add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Content-Type, Accept, Range' always;
                add_header Access-Control-Max-Age 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # Always add CORS headers regardless of origin
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods 'GET, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Content-Type, Accept, Range' always;
            add_header Access-Control-Expose-Headers 'Content-Length, Content-Range' always;
            
            # Disable cache for HLS fragments
            add_header Cache-Control no-cache;
        }
        
        # Also handle .ts files for HLS segments
        location ~ ^/hls/(.+\.ts)$ {
            alias /tmp/hls/$1;
            
            # Add CORS headers for .ts files
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods 'GET, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Content-Type, Accept, Range' always;
            add_header Access-Control-Expose-Headers 'Content-Length, Content-Range' always;
            
            # Disable cache for HLS fragments
            add_header Cache-Control no-cache;
        }
        
        # Serve recorded videos
        location /recordings {
            alias /recordings;
            autoindex on;
            
            # Add CORS headers
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods 'GET, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Content-Type, Accept, Range' always;
        }

        # Root path
        location / {
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Range" always;
            add_header Cache-Control no-cache;
        }
    }
} 