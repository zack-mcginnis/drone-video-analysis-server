version: '3'

services:
  rtmp-server:
    build:
      context: ./rtmp-server
    ports:
      - "1935:1935"  # RTMP
      - "8080:8080"  # HLS
    volumes:
      - ./recordings:/recordings
    env_file:
      - ./.env
    environment:
      - ENVIRONMENT=local
      - USE_LIGHTSAIL_BUCKET=true
      - API_SERVER_URL=http://api-server:8000
      - AWS_REGION=${AWS_REGION}
      - S3_BUCKET=${S3_BUCKET}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - DEBUG=true
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mock-video-source:
    build: ./mock-video-source
    depends_on:
      - rtmp-server
    networks:
      - app-network

  api-server:
    build:
      context: ./api-server
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    environment:
      - ENVIRONMENT=local
      - POSTGRES_HOST=${LOCAL_POSTGRES_HOST}
      - POSTGRES_PORT=${LOCAL_POSTGRES_PORT}
      - POSTGRES_DB=${LOCAL_POSTGRES_DB:-recordings}
      - POSTGRES_USER=${LOCAL_POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${LOCAL_POSTGRES_PASSWORD:-postgres}
    depends_on:
      - db
    networks:
      - app-network
    volumes:
      - ./recordings:/recordings
      - ./api-server/app:/app/app
      - ./api-server/alembic:/app/alembic
      - ./api-server/scripts:/app/scripts

  db:
    image: postgres:13
    ports:
      - "5432:5432"
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${LOCAL_POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${LOCAL_POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${LOCAL_POSTGRES_DB:-recordings}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge 